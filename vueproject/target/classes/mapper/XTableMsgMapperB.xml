<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zpark.mapper.XTableMsgMapperB">
    <resultMap id="BaseResultMap" type="com.zpark.pojo.XTableMsgB">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="x_date" property="xDate" jdbcType="TIMESTAMP"/>
        <result column="x_name" property="xName" jdbcType="VARCHAR"/>
        <result column="x_address" property="xAddress" jdbcType="VARCHAR"/>
        <result column="x_province_code" property="xProvinceCode" jdbcType="VARCHAR"/>
        <result column="x_city_code" property="xCityCode" jdbcType="VARCHAR"/>
        <result column="x_region_code" property="xRegionCode" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="selectAll" resultMap="BaseResultMap" parameterType="com.zpark.pojo.XTableMsgB">
        select id, x_date, x_name, x_address, x_province_code, x_city_code, x_region_code
        from x_table_msg t
        <where>
            <if test="xAddress!=null and xAddress!=''">
                and t.x_address like concat('%',#{xAddress},'%')
            </if>
            <if test="xName!=null and xName!=''">
                and t.x_name like concat('%',#{xName},'%')
            </if>
        </where>
        order by t.id ${sortMode}

    </select>
    <update id="updateTableMsg" parameterType="com.zpark.pojo.XTableMsg">
    update x_table_msg
    set x_date = #{xDate,jdbcType=TIMESTAMP},
      x_name = #{xName,jdbcType=VARCHAR},
      x_address = #{xAddress,jdbcType=VARCHAR},
      x_province_code = #{xProvinceCode,jdbcType=VARCHAR},
      x_city_code = #{xCityCode,jdbcType=VARCHAR},
      x_region_code = #{xRegionCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="addTableMsg" parameterType="com.zpark.pojo.XTableMsg">
    insert into x_table_msg (id, x_date, x_name,
      x_address, x_province_code, x_city_code,
      x_region_code)
    values (#{id,jdbcType=INTEGER}, #{xDate,jdbcType=TIMESTAMP}, #{xName,jdbcType=VARCHAR},
      #{xAddress,jdbcType=VARCHAR}, #{xProvinceCode,jdbcType=VARCHAR}, #{xCityCode,jdbcType=VARCHAR},
      #{xRegionCode,jdbcType=VARCHAR})
  </insert>
    <delete id="deleteByPrimaryKey" parameterType="java.util.List">
        delete from x_table_msg
        where id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--    delete from x_table_msg-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--  </delete>-->
</mapper>